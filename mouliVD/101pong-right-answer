#!/bin/python3

import sys
import math

def rad_to_deg(rad):
    return(math.fabs((rad - math.pi/2) * 180/math.pi))

def show_coords(coords):
    print("(", end='')
    for i in range(3):
        print("{:.2f}".format(coords[i]), end='')
        if i < 2:
            print(", ", end='')
    print(")")

if len(sys.argv) == 2 and sys.argv[1] == "-h":
    print('''USAGE
    ./101pong x0 y0 z0 x1 y1 z1 n
DESCRIPTION
    x0 ball abscissa at time t - 1
    y0 ball ordinate at time t - 1
    z0 ball altitude at time t - 1
    x1 ball abscissa at time t
    y1 ball ordinate at time t
    z1 ball altitude at time t
    n time shift (greater than or equal to zero, floateger)''')
    exit(0)

if len(sys.argv) != 8:
    exit (84)
for i in range(1, len(sys.argv) - 1):
    try:
        float(sys.argv[i])
    except:
        exit (84)
if not sys.argv[7].isnumeric():
    exit(84)

ball0 = [float(sys.argv[1]), float(sys.argv[2]), float(sys.argv[3])]
ball1 = [float(sys.argv[4]), float(sys.argv[5]), float(sys.argv[6])]
vector = [0, 0, 0]
aftern = [0, 0, 0]
for i in range(3):
    vector[i] = ball1[i] - ball0[i]
    aftern[i] = ball1[i] + vector[i] * float(sys.argv[7])

print("The velocity vector of the ball is:")
show_coords(vector)

print("At time t + "+sys.argv[7]+", ball coordinates will be:")
show_coords(aftern)

if vector[0]**2 + vector[1]**2 + vector[2]**2 == 0:
    exit (84)
if (vector[2] < 0 and ball1[2] < 0) or (vector[2] > 0 and ball1[2] > 0):
    print("The ball won't reach the paddle.")
else:
    print("The incidence angle is:")
    if rad_to_deg(math.acos(vector[2] / math.sqrt(vector[0]**2 + vector[1]**2 + vector[2]**2))) != 0:
        print("{:.2f}".format(rad_to_deg(math.acos(vector[2] / math.sqrt(vector[0]**2 + vector[1]**2 + vector[2]**2)))) + " degrees")
    else:
        print("")
